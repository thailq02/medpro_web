"use client";
import apiService from "@/apiRequest/ApiService";
import {Button} from "@/components/ui/button";
import {
  Dialog,
  DialogContent,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from "@/components/ui/dialog";
import {
  Table,
  TableBody,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from "@/components/ui/table";
import {QUERY_KEY} from "@/hooks/QUERY_KEY";
import {DisplaySkeleton} from "@/module/booking-appointment";
import {useQuery} from "@tanstack/react-query";
import Link from "next/link";
import styles from "./BookingAppointment.module.scss";

interface IChooseServiceProps {
  hospitalId: string;
  specialtyId: string;
  feature: string;
  doctorId: string;
  hospitalName?: string;
}

function DialogDetail({name = ""}: {name: string}) {
  return (
    <Dialog>
      <DialogTrigger asChild>
        <Button variant="outline">Chi ti√™ÃÅt</Button>
      </DialogTrigger>
      <DialogContent className={styles.dialogContent}>
        <DialogHeader className={styles.dialogHeader}>
          <DialogTitle>Th√¥ng tin</DialogTitle>
        </DialogHeader>
        <div className={styles.dialogBody}>
          <div>
            <h3 className="text-lg">Quy tr√¨nh kh√°m b·ªánh t·∫°i {name}</h3>
            <h4>B∆∞·ªõc 1: T∆∞ v·∫•n v√† x√°c ƒë·ªãnh d·ªãch v·ª• kh√°m ch·ªØa b·ªánh</h4>
            <div>
              <ul>
                <li>
                  L·ªãch h·∫πn c·ªßa kh√°ch h√†ng ƒë∆∞·ª£c s·∫Øp l·ªãch ƒë·ªÉ k·∫øt n·ªëi tr·ª±c tuy·∫øn
                  v·ªõi chuy√™n vi√™n b·ªánh vi·ªán {name}
                </li>
                <li>
                  Kh√°ch h√†ng c·∫≠p nh·∫≠t h·ªì s∆° b·ªánh √°n, c√°c c√¢u h·ªèi mong mu·ªën tr√™n
                  phi·∫øu kh√°m ƒëi·ªán t·ª≠ trong v√≤ng 03 ng√†y
                </li>
                <li>
                  D·ª±a tr√™n th√¥ng tin kh√°ch h√†ng cung c·∫•p, c√°c chuy√™n vi√™n{" "}
                  {name + " "}
                  trao ƒë·ªïi tr·ª±c tuy·∫øn (Video call) tr√™n n·ªÅn t·∫£ng Medpro nh·∫±m t∆∞
                  v·∫•n c√°c d·ªãch v·ª•, g√≥i kh√°m ph√π h·ª£p nh·∫•t.
                </li>
              </ul>
            </div>
            <h4>B∆∞·ªõc 2: ƒê·∫∑t l·ªãch kh√°m ch√≠nh th·ª©c t·∫°i {name}</h4>
            <div>
              <ul>
                <li>
                  D·ª±a tr√™n th√¥ng tin t∆∞ v·∫•n b∆∞·ªõc 02, kh√°ch h√†ng nh·∫≠n ƒë∆∞·ª£c phi·∫øu
                  kh√°m ƒëi·ªán t·ª≠ t·ª´ Medpro bao g·ªìm:
                </li>
                <ul>
                  <li>C√°c d·ªãch v·ª• kh√°m ch·ªØa b·ªánh</li>
                  <li>T·ªïng chi ph√≠ kh√°m ch·ªØa b·ªánh</li>
                  <li>Th·ªùi gian d·ª± ki·∫øn</li>
                </ul>
                <li>
                  Kh√°ch h√†ng l·ª±a ch·ªçn th√™m c√°c d·ªãch v·ª• h·ªó tr·ª£ c·ªßa b√™n th·ª© 3:
                </li>
                <ul>
                  <li>D·ªãch v·ª• ƒë∆∞a ƒë√≥n t·∫°i s√¢n bay</li>
                  <li>D·ªãch v·ª• phi√™n d·ªãch trong ng√†y kh√°m</li>
                  <li>D·ªãch v·ª• l∆∞u tr√∫</li>
                  <li>C√°c d·ªãch v·ª• kh√°c (n·∫øu c√≥)</li>
                </ul>
                <li>X√°c nh·∫≠n v√† t·∫°m ·ª©ng 1.000.000 ƒë·ªìng.</li>
              </ul>
              <div>
                <strong>üîµPh√≠ kh√°m ch·ªØa b·ªánh:</strong>
                Theo bi·ªÉu gi√° ch√≠nh th·ª©c c·ªßa b·ªánh vi·ªán - Thanh to√°n t·∫°i b·ªánh
                vi·ªán
              </div>
              <div>
                <strong>üîµPh√≠ d·ªãch v·ª•:</strong>
                Theo bi·ªÉu gi√° ch√≠nh th·ª©c nh√† cung c·∫•p d·ªãch v·ª• - Thanh to√°n t·∫°i{" "}
                {name}
              </div>
              <div>
                <strong>üîµPh√≠ t·∫°m ·ª©ng:</strong>
                Thanh to√°n tr·ª±c tuy·∫øn t·∫°i Vi·ªát Nam ƒë·ªÉ x√°c nh·∫≠n v√† gi·ªØ l·ªãch h·∫πn
                v·ªõi b·ªánh vi·ªán/nh√† cung c·∫•p d·ªãch v·ª•; ph√≠ n√†y ƒë∆∞·ª£c ho√†n tr·∫£ sau
                khi kh√°ch h√†ng ho√†n t·∫•t s·ª≠ d·ª•ng d·ªãch v·ª•
              </div>
            </div>
          </div>
        </div>
      </DialogContent>
    </Dialog>
  );
}

export default function ChooseService({
  hospitalId,
  specialtyId,
  feature,
  doctorId,
  hospitalName,
}: IChooseServiceProps) {
  const {data: services, isLoading} = useQuery({
    queryKey: [QUERY_KEY.GET_SERVICE_BY_HOSPITAL_ID, hospitalId],
    queryFn: () => apiService.getFullServiceByHospitalId(hospitalId),
    enabled: !!hospitalId,
  });

  const result = services?.payload?.data?.filter(
    (v) => v.specialty?._id === specialtyId
  );

  return (
    <>
      {isLoading ? (
        <DisplaySkeleton />
      ) : (
        <div className={styles.rightBody}>
          <div className={styles.listService}>
            <Table
              className={`text-base text-textPrimary ${styles.serviceTable}`}
            >
              <TableHeader>
                <TableRow>
                  <TableHead>#</TableHead>
                  <TableHead className="font-bold">T√™n diÃ£ch vuÃ£</TableHead>
                  <TableHead className="font-bold">Gi√° ti·ªÅn</TableHead>
                </TableRow>
              </TableHeader>
              <TableBody>
                {result?.map((service, index) => (
                  <TableRow key={service._id} className="cursor-pointer">
                    <TableCell className="font-medium">{index}</TableCell>
                    <TableCell className="max-w-[300px]">
                      <p className="font-bold">{service.name}</p>
                      <p className="font-medium italic">
                        LiÃ£ch khaÃÅm: {service.session}
                      </p>
                      {service.description &&
                        service.description !== "null" && (
                          <p className="font-medium italic">
                            ({service.description})
                          </p>
                        )}
                    </TableCell>
                    <TableCell>
                      <span className="font-medium">
                        {service.price?.toLocaleString("vi-VN")}ƒë
                      </span>
                    </TableCell>
                    <TableCell className="text-right">
                      <DialogDetail name={hospitalName ?? ""} />
                      <Button className="ml-2">
                        <Link
                          href={{
                            pathname: "/chon-lich-kham",
                            query: {
                              feature,
                              hospitalId,
                              specialtyId,
                              stepName: "date",
                              doctorId,
                              serviceId: service._id,
                            },
                          }}
                        >
                          ƒêƒÉÃ£t khaÃÅm ngay
                        </Link>
                      </Button>
                    </TableCell>
                  </TableRow>
                ))}
              </TableBody>
            </Table>
            {/* MOBILE/TABLET */}
            <div className={styles.mobile}>
              {result?.map((service) => (
                <div className={styles.mobileBox} key={service._id}>
                  <div className={styles.mobileItem}>
                    <p className={styles.mobileItemTitle}>T√™n diÃ£ch vuÃ£</p>
                    <p className={styles.mobileItemContent}>{service.name}</p>
                    {service.description && service.description !== "null" && (
                      <p className="font-medium italic">
                        ({service.description})
                      </p>
                    )}
                  </div>
                  <div className={styles.mobileItem}>
                    <p className={styles.mobileItemTitle}>LiÃ£ch khaÃÅm</p>
                    <p className={styles.mobileItemContent}>
                      {service.session}
                    </p>
                  </div>
                  <div className={styles.mobileItem}>
                    <p className={styles.mobileItemTitle}>GiaÃÅ ti√™ÃÄn</p>
                    <p className={styles.mobileItemContent}>
                      {service.price?.toLocaleString("vi-VN")}ƒë
                    </p>
                  </div>
                  <div className="w-full flex flex-col gap-2">
                    <DialogDetail name={hospitalName ?? ""} />
                    <Button>
                      <Link
                        href={{
                          pathname: "/chon-lich-kham",
                          query: {
                            feature,
                            hospitalId,
                            specialtyId,
                            stepName: "date",
                            doctorId,
                            serviceId: service._id,
                          },
                        }}
                      >
                        ƒêƒÉÃ£t khaÃÅm ngay
                      </Link>
                    </Button>
                  </div>
                </div>
              ))}
            </div>
          </div>
        </div>
      )}
    </>
  );
}
